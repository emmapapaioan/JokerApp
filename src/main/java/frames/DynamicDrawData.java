/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;



import javax.persistence.*;

import org.emmapap.Draws;
import org.emmapap.PrizeCategory;
import pojo.Draw;
import pojo.Prizecategory;
import pojo.PrizecategoryPK;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @authors Papaioannou Emmanolia 
 *          Lymperis Dimitrios 
 *          Chatziioannou Ioannis
 */
public class DynamicDrawData extends JFrame {

    /**
     * Creates new form DynamicDrawData
     */
    public ArrayList<Draws> draws = new ArrayList<>();
    public PrizeCategory prizeCategories = new PrizeCategory();

    public void updateDrawsData(ArrayList<Draws> draws) {
        this.draws = draws;
    }

    public DynamicDrawData() {
        initComponents();
        setTitle("Προβολή δεδομένων κληρώσεων ΤΖΟΚΕΡ");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    //Μέθοδος δημιουργίας πινάκων με δεδομένα κληρώσεων
    public void updateTables(ArrayList<Draws> draws) {

        //Για κάθε κλήρωση φτιάξε ένα πίνακα με τα κατάλληλα δεδομένα
        for (Draws draw : draws) {
            String drawId = String.valueOf(draw.getId());
            DefaultTableModel model = (DefaultTableModel) resultsTable.getModel();

            for (PrizeCategory prizeCategory : draw.prizeCategories) {
                String prizeCategoryName = prizeCategory.getPrizeCategoryName();
                String winningNumbers = draw.getWinningNumbers();
                String bonusNumber = String.valueOf(draw.getBonusNumber());
                String winners = String.valueOf(prizeCategory.getWinners());
                String divident;
                if (draw.getId() >= 1 && draw.getId() <= 209) {
                    divident = prizeCategory.getFormatedNumber(prizeCategory.getDivident() / 340.75);
                } else {
                    divident = String.valueOf(prizeCategory.getFormatedNumber(prizeCategory.getDivident()));
                }
                Object[] data = {
                    drawId, prizeCategoryName, winningNumbers, bonusNumber, winners, divident
                };
                model.addRow(data);
                updateDrawsData(draws);
            }
            ScrollPane.getViewport().add(resultsTable);
        }
        resultsTable.setAutoCreateRowSorter(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        showDataLabel = new javax.swing.JLabel();
        ScrollPane = new javax.swing.JScrollPane();
        resultsTable = new javax.swing.JTable();
        saveDataButton = new javax.swing.JButton();
        ΒackGroundLayer = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(0, 0));
        setMinimumSize(new java.awt.Dimension(1000, 450));
        setPreferredSize(new java.awt.Dimension(980, 570));
        setResizable(false);
        setSize(new java.awt.Dimension(1000, 570));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        showDataLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        showDataLabel.setText("Προβολή δεδομένων");
        showDataLabel.setForeground(new java.awt.Color(222, 222, 222)); //Αλλαγή χρώμα γραμμάτων σε λευκό
        showDataLabel.setMaximumSize(new java.awt.Dimension(188, 24));
        showDataLabel.setMinimumSize(new java.awt.Dimension(188, 24));
        showDataLabel.setPreferredSize(new java.awt.Dimension(188, 24));
        getContentPane().add(showDataLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, 210, 50));

        resultsTable.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        resultsTable.setModel(new DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Αριθμός κλήρωσης", "Κατηγορία επιτυχίας", "Νικητήριοι αριθμοί", "Τζόκερ αριθμός", "Επιτυχίες", "Κέρδη ανά επιτυχία"
            }
        ));
        resultsTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        resultsTable.setDragEnabled(true);
        resultsTable.setFillsViewportHeight(true);
        resultsTable.setGridColor(new java.awt.Color(0, 0, 0));
        resultsTable.setMinimumSize(new java.awt.Dimension(45, 0));
        resultsTable.setSelectionBackground(new java.awt.Color(153, 204, 255));
        ScrollPane.setViewportView(resultsTable);

        getContentPane().add(ScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(285, 40, 700, 460));

        saveDataButton.setBackground(new java.awt.Color(49, 144, 226));

        saveDataButton.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N

        saveDataButton.setForeground(new java.awt.Color(0, 0, 0));
        saveDataButton.setText(" Αποθήκευση κληρώσεων ");
        saveDataButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        saveDataButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        saveDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveDataButtonActionPerformed(evt);
            }
        });
        getContentPane().add(saveDataButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 390, -1, 30));

        ΒackGroundLayer.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ΒackGroundLayer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/tzoker_image2.jpg"))); // NOI18N
        ΒackGroundLayer.setFocusCycleRoot(true);
        ΒackGroundLayer.setMaximumSize(new java.awt.Dimension(700, 720));
        ΒackGroundLayer.setMinimumSize(new java.awt.Dimension(700, 720));
        ΒackGroundLayer.setPreferredSize(new java.awt.Dimension(700, 480));
        getContentPane().add(ΒackGroundLayer, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -100, 1000, 660));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/tzoker_image2.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, -95, 790, 660));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void saveDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveDataButtonActionPerformed
        //Δημιουργία του EntityManagerFactory
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("JokerGameStatsPU");
        //Δημιουργία του EntityManager
        EntityManager em = emf.createEntityManager();

        //Έναρξη δοσοληψίας με τη βάση δεδομένων
        em.getTransaction().begin();

        int count = 0;//Βοηθητική μεταβλητή που μετράει πόσες κληρώσεις αποθηκεύτηκαν
        int prizecategory = 0;

        //Έναρξη διαδικασίας αποθήκευσης δεδομένων κληρώσεων στη βάση δεδομένων
        for (Draws draw : draws) {
            //Δημιουργία κατάλληλης ερώτησης προς βάση δεδομένων 
            Query findDraws = em.createNamedQuery("Draw.findById", Draw.class);
            findDraws.setParameter("id", draw.getId());
            List<Draw> resultList = findDraws.getResultList();

            //Aν η κλήρωση δεν είναι ήδη αποθηκευμένη στη βάση δεδομένων
            if (resultList.isEmpty()) {
                count++;//Υπολογισμός κληρώσεων που αποθηκεύονται στη βάση δεδομένων
                //Aποθήκευση δεδομένων στον πίνακα Draw στη βάση δεδομένων
                java.sql.Date sqlDate = new java.sql.Date(draw.getDrawTime());//Mετατροπή ημερομηνίας σε μορφή ημερομηνίας που αναγνωρίζει η βάση δεδομένων
                Draw drawPj = new Draw(draw.getId(), sqlDate, draw.getWinningNumber1(), draw.getWinningNumber2(), draw.getWinningNumber3(),
                        draw.getWinningNumber4(), draw.getWinningNumber5(), draw.getBonusNumber());
                em.persist(drawPj);
                try {
                    //Απευθείας ενημέρωση βάσης δεδομένων
                    em.flush();
                } catch (TransactionRequiredException ex) {
                    System.out.println("Πρόβλημα στην απευθείας ενημέρωση της βάσης. Τα δεδομένα θα αποθηκευτούν όταν γίνει τερματισμός δοσοληψίας.");
                }

                //Αποθήκευση δεδομένων στον πίνακα Prizecategory στη βάση δεδομένων
                for (int i = 0; i < 8; i++) {
                    prizecategory++; //debug
                    Prizecategory prizeCategory = new Prizecategory();
                    PrizecategoryPK prizeCategoryPK = new PrizecategoryPK();
                    prizeCategoryPK.setId(draw.prizeCategories.get(i).getPrizeCategoryId());
                    prizeCategoryPK.setDrawid(draw.getId());
                    prizeCategory.setDraw(drawPj);
                    prizeCategory.setName(draw.prizeCategories.get(i).getPrizeCategoryName());
                    prizeCategory.setWinners(draw.prizeCategories.get(i).getWinners());
                    //Οι κληρώσεις 1-209 είναι αποθηκευμένες σε δραχμές οπότε πρέπει να τις μετατρέψουμε σε ευρώ
                    //θεωρώντας ότι η τότε συναλλαγματική αξία ήταν 1EURO=340.75GRD
                    if (draw.getId() >= 1 && draw.getId() <= 209) {
                        prizeCategory.setDivident(Math.round((draw.prizeCategories.get(i).getDivident() / 340.75) * 100.0) / 100.0);//Στρογγυλοποίηση στα 2 δεκαδικά ψηφία
                    } else {
                        prizeCategory.setDivident(draw.prizeCategories.get(i).getDivident());
                    }
                    prizeCategory.setPrizecategoryPK(prizeCategoryPK);
                    em.persist(prizeCategory);
                    try {
                        //Απευθείας ενημέρωση βάσης δεδομένων
                        em.flush();
                    } catch (TransactionRequiredException ex) {
                        System.out.println("Πρόβλημα στην απευθείας ενημέρωση της βάσης δεδομένων. Τα δεδομένα θα αποθηκευτούν όταν γίνει τερματισμός δοσοληψίας.");
                    }
                }
            }
        }
        //Τερματισμός δοσοληψίας
        em.getTransaction().commit();
        //Καταστροφή του EntityManager
        em.close();
        //Καταστροφή του EntityManagerFactory
        emf.close();

        //Eνημέρωση χρήστη για την αποθήκευση στη βάση δεδομένων
        if (count == 0) {
            //Ενημερωτικό μήνυμα ότι τα δεδομένα αποθηκεύτηκαν επιτυχώς
            JOptionPane.showMessageDialog(null, "Όλες οι επιλεγμένες κληρώσεις\nείναι ήδη στη βάση δεδομένων. ", "Ενημέρωση", JOptionPane.INFORMATION_MESSAGE);

        } else if (count > 0) {
            //Ενημερωτικό μήνυμα ότι τα δεδομένα αποθηκεύτηκαν επιτυχώς
            if (count == 1) {
                JOptionPane.showMessageDialog(null, "Μία κλήρωση αποθηκεύτηκε επιτυχώς στη βάση δεδομένων.", "Ενημέρωση", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, count + " κληρώσεις αποθηκεύτηκαν επιτυχώς στη βάση δεδομένων.", "Ενημέρωση", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_saveDataButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DynamicDrawData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DynamicDrawData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DynamicDrawData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DynamicDrawData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DynamicDrawData().setVisible(true);

            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollPane;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTable resultsTable;
    private javax.swing.JButton saveDataButton;
    private javax.swing.JLabel showDataLabel;
    private javax.swing.JLabel ΒackGroundLayer;
    // End of variables declaration//GEN-END:variables
}
